<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--Mybatis的具体的dao对应的配置文件,就类似于那个impl-->
<!--namespace要和我们的dao的接口进行绑定-->
<mapper namespace="com.sz.mapper.StudentMappers">
    <!--CRUD都提供了标准的标签
        C:create
        R:retrieve
        U:update
        D:delete
        增删改查
    -->

    <!--对于select而言,我们要通知mybatis,你帮我封装成我指定的数据库类型-->
    <!--list集合(如果你要查询的结果是一个集合,你描述集合当中的元素的是java类型就可以了.)-->
    <!--如果你要查询的结果就是一个普通的java对象,resultType直接写对应的Pojo就可以了.-->
    <!--`ISBN`,`name`,`price`,`discount`,`publisher`-->
    <resultMap id="baseMap" type="com.sz.entity.Student">
        <id property="id" column="id"/>
        <result property="ISBN" column="ISBN"/>
        <result property="name" column="name"/>
        <result property="price" column="price"/>
        <result property="discount" column="discount"/>
        <result property="publisher" column="publisher"/>
    </resultMap>

    <insert id="inserTive" parameterType="com.sz.mapper.StudentMappers">
        INSERT INTO mytables(
        <if test="#{ISBN !=null }">
            ISBN,
        </if>
        <if test="#{name !=null }">
            name,
        </if>
        <if test="#{price !=null }">
            price,
        </if>
        <if test="#{discount !=null }">
            discount,
        </if>
        <if test="#{publisher !=null }">
            publisher
        </if>
        ) VALUES(
        <if test="#{ISBN !=null}">
            #{ISBN},
        </if>
        <if test="#{name !=null }">
            #{name},
        </if>
        <if test="#{price !=null }">
            #{price},
        </if>
        <if test="#{discount !=null }">
            #{discount},
        </if>
        <if test="#{publisher !=null }">
            #{publisher}
        </if>
        )
    </insert>

    <select id="listAll" resultType="com.sz.mapper.StudentMappers">
        select * from mytables where

        <!--  这是传统避免and操作语法错误和一种方式 -->

        1=1 and
        <if test="#{ISBN !=null }">
            ISBN =#{ISBN} and
        </if>
        <if test="#{name !=null }">
            name =#{name} and
        </if>
        <if test="#{price !=null }">
            price =#{price} and
        </if>
        <if test="#{discount !=null }">
            discount =#{discount} and
        </if>
        <if test="#{publisher !=null }">
            publisher =#{publisher}
        </if>
    </select>

    <select id="listsid" resultMap="baseMap">
        select
        <choose>
            <when test="user_id == 1">
                id
            </when>
            <otherwise>
                id
            </otherwise>
        </choose>
        from mytables
    </select>

    <update id="userUName">
        UPDATE mytables
        <set>
            <if test="ISBN!=null">
                ISBN=#{ISBN},
            </if>
            <if test="name!=null">
                name=#{name},
            </if>
            <if test="price!=null">
                price=#{price},
            </if>
            <if test="discount!=null">
                discount=#{discount},
            </if>
            <if test="publisher!=null">
                publisher=#{publisher}
            </if>
        </set>

        <where>
            <if test="id!= null">
                id=#{id}
            </if>
        </where>
    </update>


    <sql id="libait">
        ISBN,`name`,price,discount,publisher
    </sql>

    <select id="listage" resultMap="baseMap">
      select
      <include refid="libait"/>
        from mytables
    </select>


</mapper>